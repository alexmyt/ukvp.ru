stages:
  - preparation
  - building
  - deploy

# Variables
variables:
  DB_USERNAME: $MYSQL_USER
  DB_PASSWORD: $MYSQL_PASSWORD
  DB_DATABASE: $MYSQL_DATABASE
  DB_HOST: $MYSQL_HOST
  #CI_DEBUG_TRACE: "true"

# inherit all global cache settings
cache: &global_cache
  #key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - vendor/
    - node_modules/    
  policy: pull-push

composer:
  stage: preparation
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate
  artifacts:
    paths:
      - .env
    expire_in: 2 hrs
    when: always

yarn:
  stage: preparation
  script:
    - yarn --version
    - yarn install --pure-lockfile

build-assets:
  stage: building
  # Download the artifacts for these jobs
  dependencies:
    - composer
  script:
    - yarn --version
    - yarn run production --progress false
  artifacts:
    paths:
      - public/css/
      - public/js/
      - public/fonts/
      - public/mix-manifest.json
    expire_in: 1 days
    when: always
  cache:
    <<: *global_cache
    policy: pull

db-seeding:
  stage: building
  services:
    - name: mysql:8.0
      command: ["--default-authentication-plugin=mysql_native_password"]
  # Download the artifacts for these jobs
  dependencies:
    - composer
  script:
    - mysql --version
    - php artisan migrate:fresh --seed
    - mysqldump --host="${DB_HOST}" --user="${MYSQL_USER}" --password="${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" > db.sql
  artifacts:
    paths:
      - storage/logs # for debugging
      - db.sql
    expire_in: 1 days
    when: always
  cache:
    <<: *global_cache
    policy: pull

deploy-test:
  stage: deploy
  environment:
    name: testing
    url: https://dev.ukvp.ru
  tags: 
    - dev
    - vds5
  dependencies:
    - composer
  script:
    - dep deploy testing --tag=$CI_COMMIT_REF_NAME -vvv
  cache:
    <<: *global_cache
    policy: pull
    
